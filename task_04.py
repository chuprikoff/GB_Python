# Задача 22: Даны два неупорядоченных набора целых чисел (может быть, с повторениями).
# Выдать без повторений в порядке возрастания все те числа, которые встречаются в обоих наборах.
# Пользователь вводит 2 числа. n — кол-во элементов первого множества. m — кол-во элементов второго множества. Затем пользователь вводит сами элементы множеств.


def find_common_elements(n, m):
    set1 = set()
    set2 = set()

    print("Введите элементы первого множества:")
    for _ in range(n):
        num = int(input())
        set1.add(num)

    print("Введите элементы второго множества:")
    for _ in range(m):
        num = int(input())
        set2.add(num)

    common_elements = sorted(set1.intersection(set2))

    print("Общие элементы, встречающиеся в обоих множествах:")
    for num in common_elements:
        print(num)


n = int(input("Введите количество элементов первого множества: "))
m = int(input("Введите количество элементов второго множества: "))

find_common_elements(n, m)

# ==========================================================================================

# Задача 24: В фермерском хозяйстве в Карелии выращивают чернику. Она растёт на круглой грядке, причём кусты высажены только по окружности.
# Таким образом, у каждого куста есть ровно два соседних. Всего на грядке растёт N кустов.
# Эти кусты обладают разной урожайностью, поэтому ко времени сбора на них выросло различное число ягод — на i-ом кусте выросло ai ягод.
# В этом фермерском хозяйстве внедрена система автоматического сбора черники. Эта система состоит из управляющего модуля и нескольких собирающих модулей.
# Собирающий модуль за один заход, находясь непосредственно перед некоторым кустом, собирает ягоды с этого куста и с двух соседних с ним.
# Напишите программу для нахождения максимального числа ягод, которое может собрать за один заход собирающий модуль, находясь перед некоторым кустом заданной во входном файле грядки.


def max_berries(garden):
    n = len(garden)
    if n <= 2:
        return sum(garden)

    max_berries = 0

    # Проверка первого куста
    berries = garden[0] + garden[1]
    max_berries = max(max_berries, berries)

    # Проверка кустов внутри грядки
    for i in range(1, n-1):
        berries = garden[i-1] + garden[i] + garden[i+1]
        max_berries = max(max_berries, berries)

    # Проверка последнего куста
    berries = garden[n-1] + garden[n-2]
    max_berries = max(max_berries, berries)

    return max_berries


# Пример использования
# Пример грядки с числом ягод на каждом кусте
garden = [5, 1, 2, 4, 3]
max_berries_count = max_berries(garden)
print("Максимальное число ягод:", max_berries_count)
